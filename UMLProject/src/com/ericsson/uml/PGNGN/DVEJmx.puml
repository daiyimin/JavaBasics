@startuml

box "LIB-PAS" #LightBlue
	participant DVEJmx
	participant JmxConnectionImpl
	participant AnnotatedDynamicMBean
	participant GenericConnectionPool
end box
box "DVE-Cluster-Communication" #Thistle
participant MBeanConfigurationManagerZooKeeper
participant MBeanAddedWatcher
participant PersistenceUtil
end box
box "Zookeeper-Util" #Wheat
participant CreateNodeQuery
endbox

[-> DVEJmx: createAndRegisterMBean(implementation, name...)
activate DVEJmx
note right
Parameter implementation is annotated by @JmxMBean, e.g.
@JmxMBean(description = "Connection Pool", ...)
public final class GenericConnectionPool
end note
DVEJmx -> DVEJmx: create()
activate DVEJmx
DVEJmx -> AnnotatedDynamicMBean: new instance
activate AnnotatedDynamicMBean
note right
implementation is stored in runtimeMBean 
of AnnotatedDynamicMBean
end note
AnnotatedDynamicMBean -> DVEJmx
deactivate AnnotatedDynamicMBean
deactivate DVEJmx
DVEJmx -> MBeanConfigurationManagerZooKeeper: create()
activate MBeanConfigurationManagerZooKeeper
MBeanConfigurationManagerZooKeeper -> MBeanConfigurationManagerZooKeeper: createMbean()
note left
Convert AnnotatedDynamicMBean to an MBean
Then convert MBean to byte array which is to be stored in zookeeper
end note
activate MBeanConfigurationManagerZooKeeper
deactivate MBeanConfigurationManagerZooKeeper
MBeanConfigurationManagerZooKeeper -> CreateNodeQuery: executeQuery()
note left
Save byte array of MBean in zookeeper
end note
activate CreateNodeQuery
CreateNodeQuery -> MBeanConfigurationManagerZooKeeper
deactivate CreateNodeQuery
MBeanConfigurationManagerZooKeeper -> DVEJmx
deactivate MBeanConfigurationManagerZooKeeper
deactivate DVEJmx

[-> MBeanAddedWatcher: childAdded()
activate MBeanAddedWatcher
MBeanAddedWatcher -> PersistenceUtil: getMbean()
activate PersistenceUtil
note left
MBeanAddedWatcher is a private class of MBeanConfigurationManagerZooKeeper
end note
PersistenceUtil -> MBeanAddedWatcher
deactivate PersistenceUtil
MBeanAddedWatcher -> MBeanConfigurationManagerZooKeeper: createMBean()
activate MBeanConfigurationManagerZooKeeper
note left
Get byte array of MBean from zookeeper 
Convert MBean to AnnotatedDynamicMBean
end note
MBeanConfigurationManagerZooKeeper -> MBeanAddedWatcher
deactivate MBeanConfigurationManagerZooKeeper
MBeanAddedWatcher -> MBeanConfigurationManagerZooKeeper: registerMBean()
activate MBeanConfigurationManagerZooKeeper
note left
The actual place that register AnnotatedDynamicMBean in MBean server
Each PL node will be notified and will register its own MBean
end note
MBeanConfigurationManagerZooKeeper -> MBeanAddedWatcher
deactivate MBeanConfigurationManagerZooKeeper
deactivate MBeanAddedWatcher

[-> AnnotatedDynamicMBean: preRegister()
activate AnnotatedDynamicMBean
note left
AnnotatedDynamicMBean implements MBeanRegistration interface
MBean server will call its preRegister() method when it is registered
end note
AnnotatedDynamicMBean -> GenericConnectionPool: startup()
note left
Actually, AnnotatedDynamicMBean call startup method of RuntimeBean
In this sample, runtimeBean could be GenericConnectionPool 
end note
activate GenericConnectionPool
GenericConnectionPool -> AnnotatedDynamicMBean
deactivate GenericConnectionPool
deactivate AnnotatedDynamicMBean

@enduml